#!/bin/bash

# Universal Slackware Package Builder

# Define color variables
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White
Color_Off='\e[0m'       # Text Reset

# Define the STARTDIR (where Pkgfile is located)
STARTDIR="$(pwd)"

# Check for the Pkgfile
if [ ! -f "$STARTDIR/Pkgfile" ]; then
    echo -e "${Red}Error: Pkgfile not found in the current directory.${Color_Off}"
    exit 1
fi

SRC="$STARTDIR/SRC"
PKG="${STARTDIR}/PKG"
OUTPUT="${STARTDIR}/OUTPUT"
mkdir -p "$SRC" "$PKG" "$OUTPUT"

rm -rf "$PKG"
rm -rf "$SRC"/*

source "$STARTDIR/Pkgfile"
description=$(head -1 Pkgfile | sed 's/# Description: //g')
homepage=$(grep URL Pkgfile | sed 's/# URL: //g')
dependencies=$(grep 'Depends on' Pkgfile | sed 's/# Depends on: //g')

fn_show_info() {
    ddist="\\033[13G"
    echo -e $Green'Name'  $ddist${Color_Off}: $name
    echo -e $Green'Version'    $ddist${Color_Off}: $version
    echo -e $Green'Release'    $ddist${Color_Off}: $release
    echo -e $Green'Description'  $ddist${Color_Off}: $description
    echo -e $Green'URL'  $ddist${Color_Off}: $homepage
    echo -e $Green'Depends on'  $ddist${Color_Off}: $dependencies
}

fn_show_info

# Handle files listed in the source array
echo -e "${Blue}Checking source files...${Color_Off}"
for src in "${source[@]}"; do
    if [ -f "$STARTDIR/$src" ]; then
        cp "$STARTDIR/$src" "$SRC/"
    fi
done

# Handle downloading and extracting source files (only archives)
echo -e "${Blue}Downloading and extracting source...${Color_Off}"
for url in "${source[@]}"; do
    file=$(basename "$url")
    if [[ "$file" =~ \.tar\.gz$ || "$file" =~ \.tar\.xz$ || "$file" =~ \.tar\.bz2$ ]]; then
        if [ ! -f "$SRC/$file" ]; then
            echo -e "${Cyan}Downloading $file...${Color_Off}"
            wget -q "$url" -P "$SRC" || { echo -e "${Red}Error: Failed to download $file${Color_Off}"; exit 1; }
        fi
        echo -e "${Cyan}Extracting $file...${Color_Off}"
        tar -xf "$SRC/$file" -C "$SRC" || { echo -e "${Red}Error: Failed to extract $file${Color_Off}"; exit 1; }
    fi
done

# Run the build function starting from SRC
echo -e "${Blue}Running the build function in $SRC...${Color_Off}"
cd "$SRC" || exit 1
build || { echo -e "${Red}Error: Build function failed.${Color_Off}"; exit 1; }

# Organize for Slackware
echo -e "${Blue}Organizing files for Slackware package...${Color_Off}"
mkdir -p "$PKG/install"
cat <<EOF >"$PKG/install/slack-desc"
       |-----handy-ruler------------------------------------------------------|
$name: $description
$name: 
EOF

# Clean package
echo -e "${Blue}Cleaning package...${Color_Off}"
for dir in "$PKG"/bin "$PKG"/sbin "$PKG"/usr/bin "$PKG"/usr/sbin; do
    if [ -d $dir ]; then
        find $dir -type f -exec strip '{}' > /dev/null 2>&1 \;
    fi
done
find "$PKG" -name "*.so*" -exec strip --strip-unneeded '{}' > /dev/null 2>&1 \;
find "$PKG" -name "*.a" -exec strip -g '{}' > /dev/null 2>&1 \;
find "$PKG" -type f -name "*.pyc" -delete
find "$PKG" -type f -name "*.pyo" -delete
if [ -d "$PKG"/usr/doc ]; then rm -rf "$PKG"/usr/doc; fi
if [ -d "$PKG"/usr/man ]; then rm -rf "$PKG"/usr/man; fi
if [ -d "$PKG"/usr/share/doc ]; then rm -rf "$PKG"/usr/share/doc; fi
if [ -d "$PKG"/usr/share/gtk-doc ]; then rm -rf "$PKG"/usr/share/gtk-doc; fi
if [ -d "$PKG"/usr/share/man ]; then rm -rf "$PKG"/usr/share/man; fi
if [ -d "$PKG"/usr/share/info ]; then rm -rf "$PKG"/usr/share/info; fi
if [ -d "$PKG"/usr/share/gnome/help ]; then rm -rf "$PKG"/usr/share/gnome/help; fi
if [ -d "$PKG"/usr/share/help ]; then rm -rf "$PKG"/usr/share/help; fi

# Create Slackware package
echo -e "${Blue}Creating Slackware package...${Color_Off}"
ARCH=$(uname -m)
PACKAGE_NAME="${name}-${version}-${ARCH}-${release}.txz"
cd "$PKG" || exit 1
makepkg -l y -c n "${OUTPUT}/${PACKAGE_NAME}" || {
    echo -e "${Red}Error: Failed to create Slackware package.${Color_Off}"
    exit 1
}

# Get the size of the package and installed files
PACKAGE_SIZE=$(du -sh "${OUTPUT}/${PACKAGE_NAME}" | cut -f1)
INSTALLED_SIZE=$(du -sh "$PKG" | cut -f1)

echo -e "${Green}Slackware package created: ${OUTPUT}/${PACKAGE_NAME}${Color_Off}"
echo -e "${Blue}Package size: ${PACKAGE_SIZE}${Color_Off}"
echo -e "${Blue}Installed size: ${INSTALLED_SIZE}${Color_Off}"

#!/bin/bash

# Universal Slackware Package Builder

# Define color variables
RESET="\033[0m"
GREEN="\033[32m"     # Success messages
YELLOW="\033[33m"    # Warnings
RED="\033[31m"       # Error messages
BLUE="\033[34m"      # General status messages
CYAN="\033[36m"      # Download/Extract status messages

# Define the STARTDIR (where Pkgfile is located)
STARTDIR="$(pwd)"

# Check for the Pkgfile
if [ ! -f "$STARTDIR/Pkgfile" ]; then
    echo -e "${RED}Error: Pkgfile not found in the current directory.${RESET}"
    exit 1
fi

SRC="$STARTDIR/SRC"
PKG="${STARTDIR}/PKG"
OUTPUT="${STARTDIR}/OUTPUT"
mkdir -p "$SRC" "$PKG" "$OUTPUT"

fn_replace_in_pkgfile_configure() {
    sed -i 's|./configure|./configure --build=x86_64-slackware-linux --host=x86_64-slackware-linux|' "$1"
}

fn_restore_in_pkgfile_configure() {
    sed -i 's|./configure --build=x86_64-slackware-linux --host=x86_64-slackware-linux|./configure|' "$1"
}

echo -e "${BLUE}Cleaning up...${RESET}"
rm -rf "$PKG"
rm -rf "$SRC"/*
fn_replace_in_pkgfile_configure "$STARTDIR/Pkgfile"
source "$STARTDIR/Pkgfile"
description=$(head -1 Pkgfile | sed 's/# Description: //g')

# Function to wrap the description at 70 characters
wrap_description() {
    local desc="$1"
    local wrapped=""
    local line
    while [ -n "$desc" ]; do
        line=$(echo "$desc" | cut -c1-70)
        wrapped="$wrapped$name: $line\n"
        desc="${desc#$line}"
    done
    echo -e "$wrapped"
}

# Handle files listed in the source array
echo -e "${BLUE}Checking source files...${RESET}"
for src in "${source[@]}"; do
    if [ -f "$STARTDIR/$src" ]; then
        echo -e "${CYAN}Copying $src to SRC directory...${RESET}"
        cp "$STARTDIR/$src" "$SRC/"
    fi
done

# Handle downloading and extracting source files (only archives)
echo -e "${BLUE}Downloading and extracting source...${RESET}"
for url in "${source[@]}"; do
    file=$(basename "$url")
    if [[ "$file" =~ \.tar\.gz$ || "$file" =~ \.tar\.xz$ || "$file" =~ \.tar\.bz2$ ]]; then
        if [ ! -f "$SRC/$file" ]; then
            echo -e "${CYAN}Downloading $file...${RESET}"
            wget -q "$url" -P "$SRC" || { echo -e "${RED}Error: Failed to download $file${RESET}"; exit 1; }
        fi
        echo -e "${CYAN}Extracting $file...${RESET}"
        tar -xf "$SRC/$file" -C "$SRC" || { echo -e "${RED}Error: Failed to extract $file${RESET}"; exit 1; }
    fi
done

# Run the build function starting from SRC
echo -e "${BLUE}Running the build function in $SRC...${RESET}"
cd "$SRC" || exit 1
build || { echo -e "${RED}Error: Build function failed.${RESET}"; fn_restore_in_pkgfile_configure "$STARTDIR/Pkgfile" && exit 1; }

# Organize for Slackware
echo -e "${BLUE}Organizing files for Slackware package...${RESET}"
mkdir -p "$PKG/install"
cat <<EOF >"$PKG/install/slack-desc"
# HOW TO EDIT THIS FILE:
# See "man 5 slack-desc" for details.
#
# Package: $name
#
$(wrap_description "$description")
$name: 
$name: This package was built using a universal Pkgfile for Slackware.
$name: 
EOF

# Clean package
echo -e "${BLUE}Cleaning package...${RESET}"
for dir in "$PKG"/bin "$PKG"/sbin "$PKG"/usr/bin "$PKG"/usr/sbin; do
    if [ -d $dir ]; then
        find $dir -type f -exec strip '{}' > /dev/null 2>&1 \;
    fi
done
find "$PKG" -name "*.so*" -exec strip --strip-unneeded '{}' > /dev/null 2>&1 \;
find "$PKG" -name "*.a" -exec strip -g '{}' > /dev/null 2>&1 \;
find "$PKG" -type f -name "*.pyc" -delete
find "$PKG" -type f -name "*.pyo" -delete
if [ -d "$PKG"/usr/doc ]; then rm -rf "$PKG"/usr/doc; fi
if [ -d "$PKG"/usr/man ]; then rm -rf "$PKG"/usr/man; fi
if [ -d "$PKG"/usr/share/doc ]; then rm -rf "$PKG"/usr/share/doc; fi
if [ -d "$PKG"/usr/share/gtk-doc ]; then rm -rf "$PKG"/usr/share/gtk-doc; fi
if [ -d "$PKG"/usr/share/man ]; then rm -rf "$PKG"/usr/share/man; fi
if [ -d "$PKG"/usr/share/info ]; then rm -rf "$PKG"/usr/share/info; fi
if [ -d "$PKG"/usr/share/gnome/help ]; then rm -rf "$PKG"/usr/share/gnome/help; fi
if [ -d "$PKG"/usr/share/help ]; then rm -rf "$PKG"/usr/share/help; fi
if [ -f "$PKG"/usr/lib/locale ]; then rm -rf "$PKG"/usr/lib/locale; fi

# Create Slackware package
echo -e "${BLUE}Creating Slackware package...${RESET}"
ARCH=$(uname -m)
PACKAGE_NAME="${name}-${version}-${ARCH}-${release}.txz"
cd "$PKG" || exit 1
makepkg -l y -c n "${OUTPUT}/${PACKAGE_NAME}" || {
    echo -e "${RED}Error: Failed to create Slackware package.${RESET}"
    exit 1
}

# Get the size of the package and installed files
PACKAGE_SIZE=$(du -sh "${OUTPUT}/${PACKAGE_NAME}" | cut -f1)
INSTALLED_SIZE=$(du -sh "$PKG" | cut -f1)

echo -e "${GREEN}Slackware package created: ${OUTPUT}/${PACKAGE_NAME}${RESET}"
echo -e "${BLUE}Package size: ${PACKAGE_SIZE}${RESET}"
echo -e "${BLUE}Installed size: ${INSTALLED_SIZE}${RESET}"

# restore Pkgfile
fn_restore_in_pkgfile_configure "$STARTDIR/Pkgfile"
